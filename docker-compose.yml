# ===========================================
# A recipe to deliver the app via Nginx, PHP 8.2.x and MariaDB 10.11.
#
# @author Björn Hempel <bjoern@hempel.li>
# @version 1.0 (2023-09-25)
# ===========================================

# ===========================================
# Start app:
# ----------
# ❯ docker-compose up -d
#
# Show containers:
# ----------------
# ❯ docker container ls
#
# Build images:
# -------------
# ❯ docker-compose build
#
# Show logs:
# ----------------
# ❯ docker-compose logs -f
#
# Login into containers:
# ----------------------
# ❯ docker-compose exec nginx bash
# ❯ docker-compose exec php bash
#
# Open app (local - localhost):
# -----------------
#
# With Traefik proxy:
# - https://www.hempel.localhost/
# - https://adminer.hempel.localhost/
# - https://maildev.hempel.localhost/
#
# Restart containers:
# -------------------
# ❯ docker-compose restart
#
# Shutdown containers:
# --------------------
# ❯ docker-compose down
#
# ===========================================

version: "3.8"

# Configures the services
services:

    # Redis
    redis:
        image: redis:alpine
        container_name: "${NAMESPACE_DEVELOPMENT}.redis"
        hostname: "${NAMESPACE_HOSTNAME_DEVELOPMENT}-redis"
        networks:
            - network-internal
        command: [ redis-server, --maxmemory 128mb, --maxmemory-policy volatile-lru, --save "" ]

    # MariaDB 10.11
    db:
        image: mariadb:10.11
        container_name: "${NAMESPACE_DEVELOPMENT}.mariadb"
        hostname: "${NAMESPACE_HOSTNAME_DEVELOPMENT}-mariadb"
        networks:
            - network-internal
        ports:
            - "${PORT_DB_EXPOSE}:${PORT_DB_INTERNAL}"
        working_dir: /application
        command: [ mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --innodb-file-per-table=1 ]
        volumes:
            - pimcore-database:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=secret-pass-854
            - MYSQL_DATABASE=pimcore
            - MYSQL_USER=pimcore
            - MYSQL_PASSWORD=secret-pass-854
        healthcheck:
            # The service is considered healthy when:
            # - connection to pimcore db can be established, and
            # - we can run a simple SQL query.
            test: [ "CMD-SHELL", "mysql -h db -u$$MYSQL_USER -p$$MYSQL_PASSWORD $$MYSQL_DATABASE -e 'SHOW TABLES;'" ]
            interval: 10s
            retries: 6
            start_period: 1m
            timeout: 3s

    # Adminer MySQL Client (MySQL + PostgreSQL)
    adminer:
        image: adminer:latest
        container_name: "${NAMESPACE_DEVELOPMENT}.adminer"
        hostname: "${NAMESPACE_HOSTNAME_DEVELOPMENT}-adminer"
        networks:
            - network-internal
        ports:
            - "${PORT_HTTP_ADMINER_EXPOSE}:${PORT_HTTP_ADMINER_INTERNAL}"
        environment:
            ADMINER_DEFAULT_SERVER: db
        depends_on:
            - db

    # Maildev (amd64 and arm64 version)
    maildev:
        image: "maildev/maildev:latest"
        container_name: "${NAMESPACE_DEVELOPMENT}.maildev"
        hostname: "${NAMESPACE_HOSTNAME_DEVELOPMENT}-maildev"
        networks:
            - network-internal
        ports:
            - "${PORT_HTTP_MAILHOG_EXPOSE}:${PORT_HTTP_MAILDEV_INTERNAL}"
            - "${PORT_SMTP_MAILHOG_EXPOSE}:${PORT_SMTP_MAILDEV_INTERNAL}"
        command: ["--mail-directory=/maildir"]
        volumes:
            - maildev-data:/maildir
        restart: always
        depends_on:
            - php

    # Nginx
    nginx:
        image: nginx:stable-alpine
        container_name: "${NAMESPACE_DEVELOPMENT}.nginx"
        hostname: "${NAMESPACE_HOSTNAME_DEVELOPMENT}-nginx"
        networks:
            - network-internal
        ports:
            - "${PORT_HTTP_EXPOSE}:${PORT_HTTP}"
        volumes:
            - .:/var/www/html:ro
            - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - php

    # PHP 8.2 container
    php:
        user: '1000:1000'
        image: pimcore/pimcore:php8.2-debug-latest
        container_name: "${NAMESPACE_DEVELOPMENT}.php.${PHP_VERSION}"
        hostname: "${NAMESPACE_HOSTNAME_DEVELOPMENT}-php-${PHP_VERSION_HOSTNAME}"
        networks:
            - network-internal
        environment:
            COMPOSER_HOME: /var/www/html
            PHP_IDE_CONFIG: serverName=localhost
            # Feed installer configuration via ENV variables.
            # See: https://pimcore.com/docs/pimcore/current/Development_Documentation/Getting_Started/Advanced_Installation_Topics.html#page_Advanced-Installation-Topics
            PIMCORE_INSTALL_MYSQL_USERNAME: pimcore
            PIMCORE_INSTALL_MYSQL_PASSWORD: pimcore
            PIMCORE_INSTALL_MYSQL_PORT: 3306
            PIMCORE_INSTALL_MYSQL_HOST_SOCKET: db
            PIMCORE_INSTALL_MYSQL_DATABASE: pimcore
            # mail configuration
            ENV_MAIL_SERVER_TRANSPORT: "${MAIL_SERVER_TRANSPORT_DOCKER}"
            ENV_MAIL_SERVER_HOST: "${MAIL_SERVER_HOST_DOCKER}"
            ENV_MAIL_SERVER_PORT: "${MAIL_SERVER_PORT_DOCKER}"
        depends_on:
            db:
                condition: service_healthy
        volumes:
            - .:/var/www/html

    # Supervisord container
    supervisord:
        user: '1000:1000'
        image: pimcore/pimcore:php8.2-supervisord-latest
        container_name: "${NAMESPACE_DEVELOPMENT}.supervisord"
        hostname: "${NAMESPACE_HOSTNAME_DEVELOPMENT}-supervisord"
        networks:
            - network-internal
        depends_on:
            db:
                condition: service_healthy
        volumes:
            - .:/var/www/html
            - ./.docker/supervisord.conf:/etc/supervisor/conf.d/pimcore.conf:ro

    # The following two services are used for testing.
    # We restrict these services to the test profile only, so we don't spin them up with every `docker compose up`.
    # See: https://docs.docker.com/compose/profiles/
    test-db:
        profiles: [ 'test' ]
        networks:
            - network-internal
        extends: db
        volumes:
            - pimcore-test-database:/var/lib/mysql

    test-php:
        profiles: [ 'test' ]
        networks:
            - network-internal
        extends: php
        environment:
            APP_ENV: test
            PIMCORE_TEST_DB_DSN: ${PIMCORE_TEST_DB_DSN:-mysql://pimcore:pimcore@test-db/pimcore}
            PIMCORE_INSTALL_ADMIN_USERNAME: pimcore
            PIMCORE_INSTALL_ADMIN_PASSWORD: pimcore
            PIMCORE_INSTALL_MYSQL_HOST_SOCKET: test-db
        depends_on:
            test-db:
                condition: service_healthy
        volumes:
            - pimcore-test-var:/var/www/html/var
            - pimcore-test-public-var:/var/www/html/public/var

# Configure volumes
volumes:
    # Volume to persist the DB data
    pimcore-database:
        name: "${NAMESPACE_DEVELOPMENT}.mariadb.data"
    # Volume to persist the test DB data
    pimcore-test-database:
        name: "${NAMESPACE_DEVELOPMENT}.test.mariadb.data"
    # PHP test volume for /var
    pimcore-test-var:
        name: "${NAMESPACE_DEVELOPMENT}.test.php.data.var"
    # PHP test volume for /public/var
    pimcore-test-public-var:
        name: "${NAMESPACE_DEVELOPMENT}.test.php.data.public.var"
    # Volume to persist the Mail data
    maildev-data:
        name: "${NAMESPACE_DEVELOPMENT}.maildev.data"

# configure networks
networks:
    network-internal:
        external: false
        name: "${NAMESPACE_DEVELOPMENT}.network.internal"
