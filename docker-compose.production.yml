# ===========================================
# Overwrites the docker-compose.yml file (Production Mode).
#
# @author Björn Hempel <bjoern@hempel.li>
# @version 1.0 (2023-09-25)
# ===========================================

# ===========================================
# Start app (Production + Traefik):
# ----------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml up -d
#
# Show containers:
# ----------------
# ❯ docker container ls
#
# Build images:
# -------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml build
#
# Show logs:
# ----------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml logs -f
#
# Login into containers:
# ----------------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml exec nginx bash
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml exec php bash
#
# Open app (local - localhost):
# -----------------
#
# - https://www.hempel.li/
#
# Restart containers:
# -------------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml restart
#
# Shutdown containers:
# --------------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml down
#
# Installation:
# -------------
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml up -d
# ❯ docker-compose -f docker-compose.yml -f docker-compose.production.yml exec php composer install
#
# ===========================================

version: "3.8"

# Configures the services
services:

  # Redis
  redis:
    networks:
      - network-internal

  # MariaDB 10.11
  db:
    networks:
      - network-internal

  # Adminer service: https://adminer.hempel.li/
  adminer:
    networks:
      - network-internal
      - network-traefik
    labels:
      # enable traefik
      - "traefik.enable=true"
      # middlewares
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_auth.basicauth.users=${GENERAL_BASICAUTH_PRODUCTION}"
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_frame.headers.customFrameOptionsValue=sameorigin"
      # chains
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_chain.chain.middlewares=${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_auth,${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_frame"
      # services (load balancer)
      - "traefik.http.services.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_http_lb.loadbalancer.server.port=${PORT_HTTP_ADMINER_INTERNAL}"
      - "traefik.http.services.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_http_lb.loadbalancer.server.scheme=http"
      # http layer -> redirect https
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_http.entrypoints=web"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_http.rule=Host(`adminer.${URL_PRODUCTION}`)"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_http.middlewares=${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_https"
      # https layer
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_https.entrypoints=websecure"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_https.rule=Host(`adminer.${URL_PRODUCTION}`)"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_https.middlewares=${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_chain"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_https.service=${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_http_lb"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_https.tls=true"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_adminer_https.tls.certresolver=letsencryptresolver"
      # network
      - "traefik.docker.network=${NETWORK_NAME_TRAEFIK_PUBLIC_PRODUCTION}"

  # Nginx service: https://www.hempel.li/
  nginx:
    image: nginx:stable-alpine
    volumes:
      - .:/var/www/html:ro
      - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
    networks:
      - network-internal
      - network-traefik
    labels:
      # enable traefik
      - "traefik.enable=true"
      # middleware -> https redirect
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https.redirectscheme.scheme=https"
      # middleware -> basic authentication
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_auth.basicauth.users=${GENERAL_BASICAUTH_PRODUCTION}"
      # middleware -> header sameorigin
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_frame.headers.customFrameOptionsValue=sameorigin"
      # middleware -> chain -> with authentication and frame
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_chain_with_auth.chain.middlewares=${NAMESPACE_UNDERLINE_DEVELOPMENT}_auth,${NAMESPACE_UNDERLINE_DEVELOPMENT}_frame"
      # middleware -> chain -> frame
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_chain_without_auth.chain.middlewares=${NAMESPACE_UNDERLINE_DEVELOPMENT}_frame"
      # service -> load balancer
      - "traefik.http.services.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https_lb.loadbalancer.server.port=${PORT_HTTP}"
      - "traefik.http.services.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https_lb.loadbalancer.server.scheme=http"
      # router -> http layer -> redirect https
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_http.entrypoints=web"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_http.rule=Host(`www.${URL_PRODUCTION}`)"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_http.middlewares=${NAMESPACE_UNDERLINE_DEVELOPMENT}_https"
      # router -> https layer -> GET, POST, etc.
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https.entrypoints=websecure"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https.rule=Host(`www.${URL_PRODUCTION}`) && Method(`GET`, `POST`, `PUT`, `PATCH`, `DELETE`)"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https.middlewares=${NAMESPACE_UNDERLINE_DEVELOPMENT}_chain_with_auth"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https.service=${NAMESPACE_UNDERLINE_DEVELOPMENT}_https_lb"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https.tls=true"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https.tls.certresolver=letsencryptresolver"
      # router -> https layer -> OPTIONS
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https_options.entrypoints=websecure"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https_options.rule=Host(`www.${URL_PRODUCTION}`) && Method(`OPTIONS`)"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https_options.middlewares=${NAMESPACE_UNDERLINE_DEVELOPMENT}_chain_without_auth"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https_options.service=${NAMESPACE_UNDERLINE_DEVELOPMENT}_https_lb"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https_options.tls=true"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_https_options.tls.certresolver=letsencryptresolver"
      # network
      - "traefik.docker.network=${NETWORK_NAME_TRAEFIK_PUBLIC_PRODUCTION}"

  # Maildev service: https://maildev.hempel.li/
  maildev:
    networks:
      - network-internal
      - network-traefik
    labels:
      # enable traefik
      - "traefik.enable=true"
      # middlewares
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_auth.basicauth.users=${GENERAL_BASICAUTH_PRODUCTION}"
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_frame.headers.customFrameOptionsValue=sameorigin"
      # chains
      - "traefik.http.middlewares.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_chain.chain.middlewares=${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_auth,${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_frame"
      # services (load balancer)
      - "traefik.http.services.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_http_lb.loadbalancer.server.port=${PORT_HTTP_MAILDEV_INTERNAL}"
      - "traefik.http.services.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_http_lb.loadbalancer.server.scheme=http"
      # http layer -> redirect https
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_http.entrypoints=web"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_http.rule=Host(`maildev.${URL_PRODUCTION}`)"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_http.middlewares=${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_https"
      # https layer
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_https.entrypoints=websecure"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_https.rule=Host(`maildev.${URL_PRODUCTION}`)"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_https.middlewares=${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_chain"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_https.service=${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_http_lb"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_https.tls=true"
      - "traefik.http.routers.${NAMESPACE_UNDERLINE_DEVELOPMENT}_maildev_https.tls.certresolver=letsencryptresolver"
      # network
      - "traefik.docker.network=${NETWORK_NAME_TRAEFIK_PUBLIC_PRODUCTION}"

  # PHP 8.2 container
  php:
    networks:
      - network-internal

  # Supervisord container
  supervisord:
    networks:
      - network-internal

# configure networks
networks:
  network-traefik:
    external: true
    name: "${NETWORK_NAME_TRAEFIK_PUBLIC_PRODUCTION}"
  network-internal:
    external: false
    name: "${NAMESPACE_HOSTNAME}.network.internal"
